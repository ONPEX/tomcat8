#!/usr/bin/make -f

JAVA_HOME := /usr/lib/jvm/default-java
JAVA_CMD := $(JAVA_HOME)/bin/java
BLDLIB := output/build/lib
BLDBIN := output/build/bin
DEB_JARS_BASE := /usr/share/java
DEB_JARS := ant ant-launcher ant-trax ant-nodeps ant-junit4 ant-junit junit4 hamcrest-1.3
DEB_CLASSPATH = $(shell for jar in $(DEB_JARS); do \
	if [ -f "$$jar" ]; then echo -n "$${jar}:"; fi; \
	if [ -f "$$jar".jar ]; then echo -n "$${jar}.jar:"; fi; \
	if [ -f $(DEB_JARS_BASE)/"$$jar" ]; then \
		echo -n "$(DEB_JARS_BASE)/$${jar}:"; fi; \
	if [ -f $(DEB_JARS_BASE)/"$$jar".jar ]; then \
		echo -n "$(DEB_JARS_BASE)/$${jar}.jar:"; fi; \
	done; \
	if [ -f "$(JAVA_HOME)/lib/tools.jar" ]; then \
		echo -n "$(JAVA_HOME)/lib/tools.jar"; fi)

# Upstream version
T_VER := $(shell dpkg-parsechangelog | egrep '^Version:' \
	| cut -f 2 -d ' ' | cut -f 2 -d ' ' | sed 's/-[^-]*$$//' | sed 's/~/-/')

# The Tomcat jars without the tomcat- prefix generated in the BLDLIB directory
T_MAVENIZED_JARS := jasper-el annotations-api jasper catalina-ha catalina websocket-api

T_VER_MAJOR := $(shell echo $(T_VER) | cut -d'.' -f1)
T_VER_MINOR := $(shell echo $(T_VER) | cut -d'.' -f2)
T_VER_BUILD := $(shell echo $(T_VER) | cut -d'.' -f3)

# root webapp file locations (during the build)
RWLOC := debian/default_root
RWFILES := $(RWLOC)/index.html $(RWLOC)/META-INF/context.xml

ANT_ARGS := -Dcompile.debug=true \
	-Djdt.jar=/usr/share/java/ecj.jar \
	-Djunit.jar=/usr/share/java/junit4.jar \
	-Dhamcrest.jar=/usr/share/java/hamcrest-core.jar \
	-Dversion=$(T_VER) \
	-Dversion.major="$(T_VER_MAJOR)" \
	-Dversion.minor="$(T_VER_MINOR)" \
	-Dversion.build="$(T_VER_BUILD)" \
	-Dversion.patch="0" \
	-Dversion.suffix="" \
	-Dno.build.dbcp=true

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	ANT_ARGS += -Dcompile.optimize=false
else
	ANT_ARGS += -Dcompile.optimize=true
endif

ANT_INVOKE := $(JAVA_CMD) -classpath "$(DEB_CLASSPATH)" org.apache.tools.ant.Main $(ANT_ARGS)

build: build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp:
	dh_testdir
ifeq (,$(findstring nocheck, $(DEB_BUILD_OPTIONS)))
	mkdir -p webapps/examples/WEB-INF/lib
	cp /usr/share/java/jstl1.1.jar webapps/examples/WEB-INF/lib/jstl.jar
	cp /usr/share/java/standard.jar webapps/examples/WEB-INF/lib/standard.jar
	$(ANT_INVOKE) deploy test
else
	$(ANT_INVOKE) deploy
endif
	javadoc -subpackages "javax.servlet" -d "output/api" \
		-sourcepath "java" -author -version -breakiterator \
		-windowtitle "Tomcat API Documentation" -doctitle "Tomcat API" \
		-bottom "Copyright &#169; 2000-2012 Apache Software Foundation. All Rights Reserved."
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	-$(ANT_INVOKE) clean
	rm -rf "output/"
	rm -rf webapps/examples/WEB-INF/lib/*.jar
	rm -f build-stamp modules/jdbc-pool/output/resources/MANIFEST.MF
	rm -f debian/tomcat8.postrm
	dh_clean
	mh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep 
	dh_installdirs

binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installman -ptomcat8-user debian/tomcat8-instance-create.1
	dh_installexamples
	dh_installinit --error-handler=true -- defaults 92 08
	dh_installdebconf
	dh_installcron
	
	mkdir -p debian/poms
	cp res/maven/*.pom debian/poms
	cp debian/javaxpoms/*.pom debian/poms
	perl -p -i -e 's/\@MAVEN.DEPLOY.VERSION\@/3.1/'      debian/poms/servlet-api.pom
	perl -p -i -e 's/\@MAVEN.DEPLOY.VERSION\@/3.0/'      debian/poms/el-api.pom
	perl -p -i -e 's/\@MAVEN.DEPLOY.VERSION\@/2.3/'      debian/poms/jsp-api.pom
	perl -p -i -e 's/\@MAVEN.DEPLOY.VERSION\@/$(T_VER)/' debian/poms/*.pom
	
	mh_installpoms -plibtomcat8-java
	for i in $(T_MAVENIZED_JARS); \
	do \
		mh_installjar -plibtomcat8-java -l           \
	                      --usj-name=tomcat8-$$i         \
	                      debian/poms/tomcat-$$i.pom     \
	                      $(BLDLIB)/$$i.jar              \
	                      usr/share/tomcat8/lib/$$i.jar; \
	done
	
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-tribes    debian/poms/tomcat-tribes.pom $(BLDLIB)/catalina-tribes.jar usr/share/tomcat8/lib/catalina-tribes.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-api       debian/poms/tomcat-api.pom    $(BLDLIB)/tomcat-api.jar      usr/share/tomcat8/lib/tomcat-api.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-coyote    debian/poms/tomcat-coyote.pom $(BLDLIB)/tomcat-coyote.jar   usr/share/tomcat8/lib/tomcat-coyote.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-juli      debian/poms/tomcat-juli.pom   $(BLDBIN)/tomcat-juli.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-util      debian/poms/tomcat-util.pom   $(BLDLIB)/tomcat-util.jar     usr/share/tomcat8/lib/tomcat-util.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-jni       debian/poms/tomcat-jni.pom    $(BLDLIB)/tomcat-jni.jar      usr/share/tomcat8/lib/tomcat-jni.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-spdy      debian/poms/tomcat-spdy.pom   $(BLDLIB)/tomcat-spdy.jar     usr/share/tomcat8/lib/tomcat-spdy.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-websocket debian/poms/tomcat-websocket.pom $(BLDLIB)/tomcat-websocket.jar usr/share/tomcat8/lib/tomcat-websocket.jar
	mh_installjar -plibtomcat8-java -l --usj-name=tomcat8-jdbc      debian/poms/tomcat-jdbc.pom   output/jdbc-pool/tomcat-jdbc.jar  usr/share/tomcat8/lib/tomcat-jdbc.jar
	
	# Install the i18n jars	
	for i in i18n-fr i18n-es i18n-ja; \
	do \
		mv $(BLDLIB)/tomcat-$$i.jar $(BLDLIB)/tomcat8-$$i-$(T_VER).jar && \
		dh_install -plibtomcat8-java $(BLDLIB)/tomcat8-$$i-$(T_VER).jar      usr/share/java && \
		dh_link -plibtomcat8-java    usr/share/java/tomcat8-$$i-$(T_VER).jar usr/share/java/tomcat8-$$i.jar && \
		dh_link -ptomcat8-common     usr/share/java/tomcat8-$$i-$(T_VER).jar usr/share/tomcat8/lib/tomcat-$$i.jar; \
	done
	
	# Install catalina-storeconfig.jar
	mv $(BLDLIB)/catalina-storeconfig.jar $(BLDLIB)/tomcat8-catalina-storeconfig-$(T_VER).jar
	dh_install -plibtomcat8-java $(BLDLIB)/tomcat8-catalina-storeconfig-$(T_VER).jar      usr/share/java
	dh_link -plibtomcat8-java    usr/share/java/tomcat8-catalina-storeconfig-$(T_VER).jar usr/share/java/tomcat8-catalina-storeconfig.jar
	dh_link -plibtomcat8-java    usr/share/java/tomcat8-catalina-storeconfig-$(T_VER).jar usr/share/tomcat8/lib/catalina-storeconfig.jar
	
	# Install catalina-ant.jar
	mv $(BLDLIB)/catalina-ant.jar $(BLDLIB)/tomcat8-catalina-ant-$(T_VER).jar
	dh_install -plibtomcat8-java $(BLDLIB)/tomcat8-catalina-ant-$(T_VER).jar      usr/share/java
	dh_link -plibtomcat8-java    usr/share/java/tomcat8-catalina-ant-$(T_VER).jar usr/share/java/tomcat8-catalina-ant.jar
	dh_link -ptomcat8-common     usr/share/java/tomcat8-catalina-ant-$(T_VER).jar usr/share/tomcat8/lib/catalina-ant.jar
	
	dh_install --exclude=.bat --exclude=Thumbs.db
	dh_link
	
	mh_installpoms -plibservlet3.1-java
	mh_installjar -plibservlet3.1-java -l -s  debian/poms/tomcat-servlet-api.pom  output/build/lib/servlet-api.jar
	mh_installjar -plibservlet3.1-java -l -s  debian/poms/servlet-api.pom         output/build/lib/servlet-api.jar
	mh_installjar -plibservlet3.1-java -l -s  debian/poms/tomcat-jsp-api.pom      output/build/lib/jsp-api.jar
	mh_installjar -plibservlet3.1-java -l -s  debian/poms/jsp-api.pom             output/build/lib/jsp-api.jar
	mh_installjar -plibservlet3.1-java -l -s  debian/poms/tomcat-el-api.pom       output/build/lib/el-api.jar
	mh_installjar -plibservlet3.1-java -l -s  debian/poms/el-api.pom              output/build/lib/el-api.jar
	
	rm -r debian/poms
	rm -rf \
           debian/tomcat8/usr/share/tomcat8/webapps/default_root/.svn \
	   debian/tomcat8/usr/share/tomcat8/webapps/default_root/META-INF/.svn
	chmod a+x debian/tomcat8-common/usr/share/tomcat8/bin/*.sh
	chmod a+x debian/tomcat8-user/usr/bin/tomcat8-instance-create
	chmod a+x debian/tomcat8-user/usr/share/tomcat8/skel/bin/*.sh
	
	# update the checksum for the root webapp
	unset rwmd5sum \
		&& rwmd5sum=`cat $(RWFILES) | md5sum - 2>/dev/null | cut -d " " -f1` \
		&& sed "s/\@ROOT_WEBAPP_MD5SUM\@/$$rwmd5sum/" debian/tomcat8.postrm.in > debian/tomcat8.postrm
	
	jh_manifest
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-arch: build install

binary: binary-indep binary-arch

get-orig-source:
	-uscan --download-version $(T_VER) --force-download --rename

.PHONY: build clean binary-indep binary-arch binary install get-orig-source

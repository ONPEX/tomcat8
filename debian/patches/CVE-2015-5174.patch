From: Markus Koschany <apo@debian.org>
Date: Sat, 28 May 2016 01:54:08 +0000
Subject: CVE-2015-5174

Origin: https://svn.apache.org/viewvc?view=revision&revision=1696281
Origin: https://svn.apache.org/viewvc?view=revision&revision=1700897
---
 java/org/apache/tomcat/util/http/RequestUtil.java  |  45 ++++++----
 .../apache/tomcat/util/http/TestRequestUtil.java   | 100 +++++++++++++++++++--
 webapps/docs/changelog.xml                         |  11 +++
 3 files changed, 135 insertions(+), 21 deletions(-)

diff --git a/java/org/apache/tomcat/util/http/RequestUtil.java b/java/org/apache/tomcat/util/http/RequestUtil.java
index ebe4f34..1ee4bca 100644
--- a/java/org/apache/tomcat/util/http/RequestUtil.java
+++ b/java/org/apache/tomcat/util/http/RequestUtil.java
@@ -30,6 +30,9 @@ public class RequestUtil {
      * try to perform security checks for malicious input.
      *
      * @param path Relative path to be normalized
+     *
+     * @return The normalized path or <code>null</code> of the path cannot be
+     *         normalized
      */
     public static String normalize(String path) {
         return normalize(path, true);
@@ -44,11 +47,15 @@ public class RequestUtil {
      *
      * @param path Relative path to be normalized
      * @param replaceBackSlash Should '\\' be replaced with '/'
+     *
+     * @return The normalized path or <code>null</code> of the path cannot be
+     *         normalized
      */
     public static String normalize(String path, boolean replaceBackSlash) {
 
-        if (path == null)
+        if (path == null) {
             return null;
+        }
 
         // Create a place for the normalized path
         String normalized = path;
@@ -56,9 +63,6 @@ public class RequestUtil {
         if (replaceBackSlash && normalized.indexOf('\\') >= 0)
             normalized = normalized.replace('\\', '/');
 
-        if (normalized.equals("/."))
-            return "/";
-
         // Add a leading "/" if necessary
         if (!normalized.startsWith("/"))
             normalized = "/" + normalized;
@@ -66,34 +70,43 @@ public class RequestUtil {
         // Resolve occurrences of "//" in the normalized path
         while (true) {
             int index = normalized.indexOf("//");
-            if (index < 0)
+            if (index < 0) {
                 break;
-            normalized = normalized.substring(0, index) +
-                normalized.substring(index + 1);
+            }
+            normalized = normalized.substring(0, index) + normalized.substring(index + 1);
         }
 
         // Resolve occurrences of "/./" in the normalized path
         while (true) {
             int index = normalized.indexOf("/./");
-            if (index < 0)
+            if (index < 0) {
                 break;
-            normalized = normalized.substring(0, index) +
-                normalized.substring(index + 2);
+            }
+            normalized = normalized.substring(0, index) + normalized.substring(index + 2);
         }
 
         // Resolve occurrences of "/../" in the normalized path
         while (true) {
             int index = normalized.indexOf("/../");
-            if (index < 0)
+            if (index < 0) {
                 break;
-            if (index == 0)
-                return (null);  // Trying to go outside our context
+            }
+            if (index == 0) {
+                return null;  // Trying to go outside our context
+            }
             int index2 = normalized.lastIndexOf('/', index - 1);
-            normalized = normalized.substring(0, index2) +
-                normalized.substring(index + 3);
+            normalized = normalized.substring(0, index2) + normalized.substring(index + 3);
+        }
+
+        if (normalized.equals("/.")) {
+            return "/";
+        }
+
+        if (normalized.equals("/..")) {
+            return null;  // Trying to go outside our context
         }
 
         // Return the normalized path that we have completed
-        return (normalized);
+        return normalized;
     }
 }
diff --git a/test/org/apache/tomcat/util/http/TestRequestUtil.java b/test/org/apache/tomcat/util/http/TestRequestUtil.java
index fe3115f..f50098c 100644
--- a/test/org/apache/tomcat/util/http/TestRequestUtil.java
+++ b/test/org/apache/tomcat/util/http/TestRequestUtil.java
@@ -23,11 +23,101 @@ import org.junit.Test;
 public class TestRequestUtil {
 
     @Test
-    public void testNormalizeString() {
-        assertEquals("/something",RequestUtil.normalize("//something"));
-        assertEquals("/some/thing",RequestUtil.normalize("some//thing"));
-        assertEquals("/something/",RequestUtil.normalize("something//"));
-        assertEquals("/",RequestUtil.normalize("//"));
+    public void testNormalize01() {
+        doTestNormalize("//something", "/something");
     }
 
+    @Test
+    public void testNormalize02() {
+        doTestNormalize("some//thing", "/some/thing");
+    }
+
+    @Test
+    public void testNormalize03() {
+        doTestNormalize("something//", "/something/");
+    }
+
+    @Test
+    public void testNormalize04() {
+        doTestNormalize("//", "/");
+    }
+
+        @Test
+    public void testNormalize05() {
+        doTestNormalize("//", "/");
+    }
+
+    @Test
+    public void testNormalize06() {
+        doTestNormalize("///", "/");
+    }
+
+    @Test
+    public void testNormalize07() {
+        doTestNormalize("////", "/");
+    }
+
+    @Test
+    public void testNormalize08() {
+        doTestNormalize("/.", "/");
+    }
+
+    @Test
+    public void testNormalize09() {
+        doTestNormalize("/./", "/");
+    }
+
+    @Test
+    public void testNormalize10() {
+        doTestNormalize(".", "/");
+    }
+
+    @Test
+    public void testNormalize11() {
+        doTestNormalize("/..", null);
+    }
+
+    @Test
+    public void testNormalize12() {
+        doTestNormalize("/../", null);
+    }
+
+    @Test
+    public void testNormalize13() {
+        doTestNormalize("..", null);
+    }
+
+    @Test
+    public void testNormalize14() {
+        doTestNormalize("//..", null);
+    }
+
+    @Test
+    public void testNormalize15() {
+        doTestNormalize("//../", null);
+    }
+
+    @Test
+    public void testNormalize16() {
+        doTestNormalize("/./..", null);
+    }
+
+    @Test
+    public void testNormalize17() {
+        doTestNormalize("/./../", null);
+    }
+
+    @Test
+    public void testNormalize18() {
+        doTestNormalize("/a/../..", null);
+    }
+
+    @Test
+    public void testNormalize19() {
+        doTestNormalize("/a/../../", null);
+    }
+
+    private void doTestNormalize(String input, String expected) {
+        assertEquals(expected,RequestUtil.normalize(input));
+    }
 }
diff --git a/webapps/docs/changelog.xml b/webapps/docs/changelog.xml
index a89b75e..f552c88 100644
--- a/webapps/docs/changelog.xml
+++ b/webapps/docs/changelog.xml
@@ -1857,6 +1857,10 @@
         Enable non-blocking reads to take place on non-container threads.
         (markt)
       </fix>
+      <fix>
+        Correct a coupe of edge cases in <code>RequestUtil.normalize()</code>.
+        (markt)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="Cluster">
@@ -1868,6 +1872,13 @@
       </scode>
     </changelog>
   </subsection>
+  <subsection name="Coyote">
+    <changelog>
+      <fix>
+        Correct some edge cases in <code>RequestUtil.normalize()</code>. (markt)
+      </fix>
+    </changelog>
+  </subsection>
   <subsection name="Web applications">
     <changelog>
       <fix>

From: Markus Koschany <apo@debian.org>
Date: Sat, 28 May 2016 03:11:58 +0000
Subject: CVE-2015-5346

Origin: https://svn.apache.org/viewvc?view=revision&revision=1713185
Origin: https://svn.apache.org/viewvc?view=revision&revision=1723506
---
 .../apache/catalina/connector/CoyoteAdapter.java   |  8 ++--
 java/org/apache/catalina/connector/Request.java    | 52 ++++++++++++++--------
 webapps/docs/changelog.xml                         |  8 ++++
 3 files changed, 46 insertions(+), 22 deletions(-)

diff --git a/java/org/apache/catalina/connector/CoyoteAdapter.java b/java/org/apache/catalina/connector/CoyoteAdapter.java
index e3ff219..775862d 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -941,9 +941,11 @@ public class CoyoteAdapter implements Adapter {
                                 // Reset mapping
                                 request.getMappingData().recycle();
                                 mapRequired = true;
-                                // Recycle cookies in case correct context is
-                                // configured with different settings
-                                req.getCookies().recycle();
+                                // Recycle cookies and session info in case the
+                                // correct context is configured with different
+                                // setting
+                                request.recycleSessionInfo();
+                                request.recycleCookieInfo(true);
                             }
                             break;
                         }
diff --git a/java/org/apache/catalina/connector/Request.java b/java/org/apache/catalina/connector/Request.java
index 2d24ba4..55682be 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -287,6 +287,11 @@ public class Request
      */
     protected boolean cookiesParsed = false;
 
+    /**
+     * Cookie parsed flag. Indicates that the ServerCookies have been converted
+     * into user facing Cookie objects.
+     */
+    protected boolean cookiesConverted = false;
 
     /**
      * Secure flag.
@@ -461,7 +466,6 @@ public class Request
             parts = null;
         }
         partsParseException = null;
-        cookiesParsed = false;
         locales.clear();
         localesParsed = false;
         secure = false;
@@ -475,20 +479,9 @@ public class Request
         attributes.clear();
         sslAttributesParsed = false;
         notes.clear();
-        cookies = null;
 
-        if (session != null) {
-            try {
-                session.endAccess();
-            } catch (Throwable t) {
-                ExceptionUtils.handleThrowable(t);
-                log.warn(sm.getString("coyoteRequest.sessionEndAccessFail"), t);
-            }
-        }
-        session = null;
-        requestedSessionCookie = false;
-        requestedSessionId = null;
-        requestedSessionURL = false;
+        recycleSessionInfo();
+        recycleCookieInfo(false);
 
         if (Globals.IS_SECURITY_ENABLED || Connector.RECYCLE_FACADES) {
             parameterMap = new ParameterMap<>();
@@ -531,11 +524,32 @@ public class Request
     }
 
 
-    /**
-     * Clear cached encoders (to save memory for Comet requests).
-     */
-    public boolean read()
-        throws IOException {
+    protected void recycleSessionInfo() {
+        if (session != null) {
+            try {
+                session.endAccess();
+            } catch (Throwable t) {
+                ExceptionUtils.handleThrowable(t);
+                log.warn(sm.getString("coyoteRequest.sessionEndAccessFail"), t);
+            }
+        }
+        session = null;
+        requestedSessionCookie = false;
+        requestedSessionId = null;
+        requestedSessionURL = false;
+        requestedSessionSSL = false;
+    }
+
+    protected void recycleCookieInfo(boolean recycleCoyote) {
+        cookiesParsed = false;
+        cookiesConverted = false;
+        cookies = null;
+        if (recycleCoyote) {
+            getCoyoteRequest().getCookies().recycle();
+        }
+    }
+
+    public boolean read() throws IOException {
         return (inputBuffer.realReadBytes(null, 0, 0) > 0);
     }
 
diff --git a/webapps/docs/changelog.xml b/webapps/docs/changelog.xml
index f552c88..cb4c914 100644
--- a/webapps/docs/changelog.xml
+++ b/webapps/docs/changelog.xml
@@ -184,6 +184,10 @@
         Reduce duplicated code. All AJP connectors use common method to
         configuration of processor. (kfujino)
       </fix>
+      <fix>
+          <bug>58809</bug>: Correctly recycle cookies when mapping requests for
+               parallel deployment. (markt)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="Jasper">
@@ -318,6 +322,10 @@
         page that has the <code>isErrorPage</code> page directive set to
         <code>true</code>. (markt)
       </fix>
+      <fix>
+        Handle the unlikely case where different versions of a web application
+        are deployed with different session settings. (markt)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="WebSocket">
